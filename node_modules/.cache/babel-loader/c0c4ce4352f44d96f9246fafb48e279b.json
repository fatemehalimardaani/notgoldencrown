{"ast":null,"code":"import _objectSpread from \"/Users/fatemeh/Documents/document/toturials/complete-react-developer/crwn-clothing/heroku/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport firebase from \"firebase\";\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBdd65kQ0GZgCcs7q_si-49fi5AHh5Vfug\",\n  authDomain: \"crwn-crwn-c9064.firebaseapp.com\",\n  databaseURL: \"https://crwn-crwn-c9064.firebaseio.com\",\n  projectId: \"crwn-crwn-c9064\",\n  storageBucket: \"crwn-crwn-c9064.appspot.com\",\n  messagingSenderId: \"764979844316\",\n  appId: \"1:764979844316:web:4a2dd3a8dc88c264cf1019\",\n  measurementId: \"G-2T1YTDH4QQ\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const collectionRef = firebase.doc('users');\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/fatemeh/Documents/document/toturials/complete-react-developer/crwn-clothing/heroku/src/components/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","collectionRef","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,MAAMC,MAAM,GAAC;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,iCAFD;AAGXC,EAAAA,WAAW,EAAE,wCAHF;AAIXC,EAAAA,SAAS,EAAE,iBAJA;AAKXC,EAAAA,aAAa,EAAE,6BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAb;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AACA,OAAO,MAAMU,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,aAAa,GAAClB,QAAQ,CAACgB,GAAT,CAAa,OAAb,CAApB;AAEA,QAAMG,QAAQ,GAAG,MAAML,OAAO,CAACM,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAAA,UACZC,WADY,GACWV,QADX,CACZU,WADY;AAAA,UACCC,KADD,GACWX,QADX,CACCW,KADD;AAEpB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AACA,QAAI;AACF,YAAMX,OAAO,CAACY,GAAR;AACJJ,QAAAA,WADI;AAEJC,QAAAA,KAFI;AAGJC,QAAAA;AAHI,SAIDX,cAJC,EAAN;AAMD,KAPD,CAOE,OAAOc,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF;;AAED,SAAOhB,OAAP;AACD,CAxBI;AAyBP,OAAO,MAAMiB,IAAI,GAAC/B,QAAQ,CAAC+B,IAAT,EAAX;AACP,OAAO,MAAMhB,SAAS,GAACf,QAAQ,CAACe,SAAT,EAAhB;AACP,MAAMiB,QAAQ,GAAC,IAAIhC,QAAQ,CAAC+B,IAAT,CAAcE,kBAAlB,EAAf;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAC,MAAIL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA3B;AACP,eAAehC,QAAf","sourcesContent":["import firebase from \"firebase\";\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config={\n  apiKey: \"AIzaSyBdd65kQ0GZgCcs7q_si-49fi5AHh5Vfug\",\n  authDomain: \"crwn-crwn-c9064.firebaseapp.com\",\n  databaseURL: \"https://crwn-crwn-c9064.firebaseio.com\",\n  projectId: \"crwn-crwn-c9064\",\n  storageBucket: \"crwn-crwn-c9064.appspot.com\",\n  messagingSenderId: \"764979844316\",\n  appId: \"1:764979844316:web:4a2dd3a8dc88c264cf1019\",\n  measurementId: \"G-2T1YTDH4QQ\"\n};\n\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n  \n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const collectionRef=firebase.doc('users')\n  \n    const snapShot = await userRef.get();\n  \n    if (!snapShot.exists) {\n      const { displayName, email } = userAuth;\n      const createdAt = new Date();\n      try {\n        await userRef.set({\n          displayName,\n          email,\n          createdAt,\n          ...additionalData\n        });\n      } catch (error) {\n        console.log('error creating user', error.message);\n      }\n    }\n  \n    return userRef;\n  };\nexport const auth=firebase.auth();\nexport const firestore=firebase.firestore();\nconst provider=new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt:'select_account'});\nexport const signInWithGoogle=()=>auth.signInWithPopup(provider);\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}